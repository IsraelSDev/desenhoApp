{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\drawapp\\\\src\\\\Canvas.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  border: \"0.0625rem solid #9c9c9c\",\n  borderRadius: \"0.25rem\"\n};\nconst Canvas = class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactSketchCanvas, {\n        ref: this.canvas,\n        strokeWidth: 5,\n        strokeColor: \"black\",\n        height: \"500px\",\n        backgroundImage: \"https://upload.wikimedia.org/wikipedia/commons/7/70/Graph_paper_scan_1600x1000_%286509259561%29.jpg\",\n        preserveBackgroundImageAspectRatio: \"none\",\n        exportWithBackgroundImage: false,\n        withTimestamp: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.canvas.current.exportSvg().then(data => {\n            var svgData = data;\n            var svgBlob = new Blob([svgData], {\n              type: \"image/svg+xml;charset=utf-8\"\n            });\n            var svgUrl = URL.createObjectURL(svgBlob);\n            var downloadLink = document.createElement(\"a\");\n            downloadLink.href = svgUrl;\n            downloadLink.download = \"paint.svg\";\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n          }).catch(e => {\n            console.log(e);\n          });\n        },\n        children: \"Get Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.canvas.current.clearCanvas();\n\n          this.canvas.current.__Prototype__();\n        },\n        children: \"Clear Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n};\nexport default Canvas;","map":{"version":3,"sources":["D:/Projetos/drawapp/src/Canvas.jsx"],"names":["React","useEffect","ReactSketchCanvas","styles","border","borderRadius","Canvas","Component","constructor","props","canvas","createRef","render","current","exportSvg","then","data","svgData","svgBlob","Blob","type","svgUrl","URL","createObjectURL","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild","catch","e","console","log","clearCanvas","__Prototype__"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yBADK;AAEbC,EAAAA,YAAY,EAAE;AAFD,CAAf;AAQA,MAAMC,MAAM,GAAG,cAAcN,KAAK,CAACO,SAApB,CAA8B;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,gBAAcV,KAAK,CAACW,SAAN,EAAd;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEE,QAAC,iBAAD;AACE,QAAA,GAAG,EAAE,KAAKF,MADZ;AAEE,QAAA,WAAW,EAAE,CAFf;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,MAAM,EAAC,OAJT;AAKE,QAAA,eAAe,EAAC,qGALlB;AAME,QAAA,kCAAkC,EAAC,MANrC;AAOE,QAAA,yBAAyB,EAAE,KAP7B;AAQE,QAAA,aAAa,EAAE;AARjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKA,MAAL,CAAYG,OAAZ,CAAoBC,SAApB,GACGC,IADH,CACQC,IAAI,IAAI;AACZ,gBAAIC,OAAO,GAAGD,IAAd;AACA,gBAAIE,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACF,OAAD,CAAT,EAAoB;AAAEG,cAAAA,IAAI,EAAE;AAAR,aAApB,CAAd;AACA,gBAAIC,MAAM,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,OAApB,CAAb;AACA,gBAAIM,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAnB;AACAF,YAAAA,YAAY,CAACG,IAAb,GAAoBN,MAApB;AACAG,YAAAA,YAAY,CAACI,QAAb,GAAwB,WAAxB;AACAH,YAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,YAA1B;AACAA,YAAAA,YAAY,CAACO,KAAb;AACAN,YAAAA,QAAQ,CAACI,IAAT,CAAcG,WAAd,CAA0BR,YAA1B;AACD,WAXH,EAWKS,KAXL,CAWWC,CAAC,IAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,WAbH;AAcD,SAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAiCE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKxB,MAAL,CAAYG,OAAZ,CAAoBwB,WAApB;;AACA,eAAK3B,MAAL,CAAYG,OAAZ,CAAoByB,aAApB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4CD;;AApD0C,CAA7C;AAwDA,eAAehC,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\r\n\r\nconst styles = {\r\n  border: \"0.0625rem solid #9c9c9c\",\r\n  borderRadius: \"0.25rem\"\r\n};\r\n\r\n\r\n\r\n\r\nconst Canvas = class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvas = React.createRef();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <ReactSketchCanvas\r\n          ref={this.canvas}\r\n          strokeWidth={5}\r\n          strokeColor=\"black\"\r\n          height=\"500px\"\r\n          backgroundImage=\"https://upload.wikimedia.org/wikipedia/commons/7/70/Graph_paper_scan_1600x1000_%286509259561%29.jpg\"\r\n          preserveBackgroundImageAspectRatio=\"none\"\r\n          exportWithBackgroundImage={false}\r\n          withTimestamp={true}\r\n        />\r\n\r\n        <button\r\n          onClick={() => {\r\n            this.canvas.current.exportSvg()\r\n              .then(data => {\r\n                var svgData = data;\r\n                var svgBlob = new Blob([svgData], { type: \"image/svg+xml;charset=utf-8\" });\r\n                var svgUrl = URL.createObjectURL(svgBlob);\r\n                var downloadLink = document.createElement(\"a\");\r\n                downloadLink.href = svgUrl;\r\n                downloadLink.download = \"paint.svg\";\r\n                document.body.appendChild(downloadLink);\r\n                downloadLink.click();\r\n                document.body.removeChild(downloadLink);\r\n              }).catch(e => {\r\n                console.log(e)\r\n              })\r\n          }}\r\n        >\r\n          Get Image\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            this.canvas.current.clearCanvas()\r\n            this.canvas.current.__Prototype__();\r\n          }}\r\n        >\r\n          Clear Image\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}