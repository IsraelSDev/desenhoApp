{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\drawapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Canvas from './Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const canvas = useRef();\n  let ctx = null; // initialize the canvas context\n\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight; // get context of the canvas\n\n    ctx = canvasEle.getContext(\"2d\");\n  }, []);\n  useEffect(() => {\n    writeText({\n      text: 'Clue Mediator!',\n      x: 180,\n      y: 70\n    });\n    writeText({\n      text: 'Welcome to ',\n      x: 180,\n      y: 70\n    }, {\n      textAlign: 'right'\n    });\n    writeText({\n      text: 'www.cluemediator.com',\n      x: 180,\n      y: 130\n    }, {\n      fontSize: 30,\n      color: 'green',\n      textAlign: 'center'\n    });\n    writeText({\n      text: 'Like, Share and Subscribe...',\n      x: 180,\n      y: 200\n    }, {\n      fontSize: 14,\n      fontFamily: 'cursive',\n      color: 'blue',\n      textAlign: 'center'\n    });\n  }, []); // write a text\n\n  const writeText = function (info) {\n    let style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      text,\n      x,\n      y\n    } = info;\n    const {\n      fontSize = 20,\n      fontFamily = 'Arial',\n      color = 'black',\n      textAlign = 'left',\n      textBaseline = 'top'\n    } = style;\n    ctx.beginPath();\n    ctx.font = fontSize + 'px ' + fontFamily;\n    ctx.textAlign = textAlign;\n    ctx.textBaseline = textBaseline;\n    ctx.fillStyle = color;\n    ctx.fillText(text, x, y);\n    ctx.stroke();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Write text on Canvas - \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://www.cluemediator.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Clue Mediator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Uf3A04Dxr7BWd2F1n+LTI5nEQDU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Projetos/drawapp/src/App.js"],"names":["React","useRef","useEffect","Canvas","App","canvas","ctx","canvasEle","current","width","clientWidth","height","clientHeight","getContext","writeText","text","x","y","textAlign","fontSize","color","fontFamily","info","style","textBaseline","beginPath","font","fillStyle","fillText","stroke"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useEffect } from 'react';\nimport Canvas from './Canvas';\n\nfunction App() {\n  const canvas = useRef();\n  let ctx = null;\n\n  // initialize the canvas context\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n\n    // get context of the canvas\n    ctx = canvasEle.getContext(\"2d\");\n  }, []);\n\n  useEffect(() => {\n    writeText({ text: 'Clue Mediator!', x: 180, y: 70 });\n\n    writeText({ text: 'Welcome to ', x: 180, y: 70 }, { textAlign: 'right' });\n\n    writeText({ text: 'www.cluemediator.com', x: 180, y: 130 }, { fontSize: 30, color: 'green', textAlign: 'center' });\n\n    writeText({ text: 'Like, Share and Subscribe...', x: 180, y: 200 }, { fontSize: 14, fontFamily: 'cursive', color: 'blue', textAlign: 'center' });\n  }, []);\n\n  // write a text\n  const writeText = (info, style = {}) => {\n    const { text, x, y } = info;\n    const { fontSize = 20, fontFamily = 'Arial', color = 'black', textAlign = 'left', textBaseline = 'top' } = style;\n\n    ctx.beginPath();\n    ctx.font = fontSize + 'px ' + fontFamily;\n    ctx.textAlign = textAlign;\n    ctx.textBaseline = textBaseline;\n    ctx.fillStyle = color;\n    ctx.fillText(text, x, y);\n    ctx.stroke();\n  }\n\n  return (\n    <div className=\"App\">\n      <Canvas />\n      <h3>Write text on Canvas - <a href=\"http://www.cluemediator.com\" target=\"_blank\" rel=\"noopener noreferrer\">Clue Mediator</a></h3>\n      <canvas ref={canvas}></canvas>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}